
package open.dolphin.impl.lbtest;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import open.dolphin.infomodel.InFacilityLaboItem;

/**
 * 施設内検査項目default
 * 
 * @author masuda, Masuda Naika
 */
public class InFacilityLaboTable {
    
    private static final Map<String, String> groupMap;
    private static final Map<String, String> specimenMap;
    
    private static final String[][] groupArray = {
        {"00", "検体検査、病理診断、生体検査、核医学診断及びコンピューター断層診断以外の診療行為"},
        {"01", "尿・糞便等検査"},
        {"02", "血液学的検査"},
        {"03", "生化学的検査(I)"},
        {"04", "生化学的検査(II)"},
        {"05", "免疫学的検査"},
        {"06", "微生物学的検査"},
        {"07", "病理診断"},
        {"08", "基本的検体検査"},
        {"11", "呼吸機能検査"},
        {"12", "脈波図、心機図、ポリグラフ検査"},
        {"13", "脳波検査"},
        {"14", "神経・筋検査"},
        {"15", "ラジオアイソトープ検査"},
        {"31", "核医学診断"},
        {"32", "コンピューター断層診断"}
    };
    
    private static final String[][] specimenArray = {
        {"001","尿(含むその他)"},
        {"019","全血(添加物入り)"},
        {"022","血漿"},
        {"023","血清"},
    };
     
    private static final String[][] laboArray = {
        // medisCode, itemName, parentCode, groupCode, specimenCode, normalValue, unit
        {"3A010000002327101", "ＴＰ", "3A010000002327101", "03", "023", "6.5-8.5", "g/dL"},
        {"3A015000002327101", "Ａｌｂ", "3A015000002327101", "03", "023", "3.5-5.2", "g/dL"},
        {"3B035000002327201", "GOT(AST)", "3B035000002327201", "03", "023", "5-35", "U/L"},
        {"3B045000002327201", "GPT(ALT)", "3B045000002327201", "03", "023", "5-35", "U/L"},
        {"3B050000002327101", "ＬＤH", "3B050000002327101", "03", "023", "110-220", "U/L"},
        {"3B090000002327101", "γ－ＧＴ", "3B090000002327101", "03", "023", "10-65", "U/L"},
        {"3B110000001927101", "ＣｈＥ", "3B110000001927101", "03", "023", "230-520", "U/L"},
        {"3B070000002327101", "アルカリホスファターゼ", "3B070000002327101", "03", "023", "100-340", "U/L"},
        {"3B160000002327101", "Ａｍｙ", "3B160000002327101", "03", "023", "40-120", "U/L"},
        {"3F050000002327101", "Ｔｃｈｏ", "3F050000002327101", "03", "023", "120-219", "mg/dL"},
        {"3F015000002327101", "ＴＧ", "3F015000002327101", "03", "023", "50-149", "mg/dL"},
        {"3F070000002327101", "ＨＤＬ－Ｃｈ", "3F070000002327101", "03", "023", "40-79", "mg/dL"},
        {"3F077000002327101", "ＬＤＬ－コレステロール", "3F077000002327101", "03", "023", "-139", "mg/dL"},
        {"3B010000002327101", "ＣＫ", "3B010000002327101", "03", "023", "20-200", "U/L"},
        {"5C093000002305101", "心筋トロポニンＴ（定性、定量）", "5C093000002305101", "03", "023", "(-)", "ng/mL"},
        {"3H010000002326101", "ナトリウム", "3H010000002326101", "03", "023", "135-145", "mEq/L"},
        {"3H015000002326101", "カリウム", "3H015000002326101", "03", "023", "3.5-5.0", "mEq/L"},
        {"3H020000002326101", "クロール", "3H020000002326101", "03", "023", "98-110", "mEq/L"},
        {"3H030000002327101", "カルシウム", "3H030000002327101", "03", "023", "4.1-5.1", "mg/dL"},
        {"3J010000002327101", "ＢＩＬ／総", "3J010000002327101", "03", "023", "0.2-1.2", "mg/dL"},
        {"3J015000002327101", "ＢＩＬ／直", "3J015000002327101", "03", "023", "0-0.5", "mg/dL"},
        {"3C025000002327101", "ＢＵＮ", "3C025000002327101", "03", "023", "10-22", "mg/dL"},
        {"3C015000002327101", "クレアチニン", "3C015000002327101", "03", "023", "0.6-1.2", "mg/dL"},
        {"3D045000001906202", "ＨｂＡ１ｃ", "3D045000001906202", "02", "019", "4.3-5.8", "%"},
        {"3D046000001906202", "ＨｂＡ１ｃ（NGSP）", "3D046000001906202", "02", "019", "4.6-6.2", "%"},
        {"3D010000001926101", "グルコース", "3D010000001926101", "03", "023", "60-109", "mg/dL"},
        {"5C070135102306111", "ＣＲＰ（定性）", "5C070135102306111", "05", "023", "(-)", ""},
        {"5C070135202306101", "ＣＲＰ", "5C070135202306101", "05", "023", "<0.4", "mg/dL"},
        {"2A990000001992052", "白血球数", "2A990000001992052", "02", "019", "4000-9500", "/μL"},        
        {"2A990000001992051", "赤血球数", "2A990000001992051", "02", "019", "380-550", "X10000/μL"},
        {"2A990000001992053", "ヘモグロビン", "2A990000001992053", "02", "019", "12-18", "g/dL"},
        {"2A990000001992054", "ヘマトクリット", "2A990000001992054", "02", "019", "35-48", "%"},        
        {"2A990000001992056", "ＭＣＶ", "2A990000001992056", "02", "019", "82-98", "fL"},
        {"2A990000001992057", "ＭＣＨ", "2A990000001992057", "02", "019", "28-33", "pg"},
        {"2A990000001992058", "ＭＣＨＣ", "2A990000001992058", "02", "019", "32-36", "%"},
        {"2A990000001992055", "血小板数", "2A990000001992055", "02", "019", "10-40", "X10000/μL"},
        {"2B030000002231151", "PT時間(秒)", "2B030000002231151", "02", "022", "10.0-14.0", "sec"},
        {"2B030000002231153", "PT活性(%)", "2B030000002231153", "02", "022", "70-130", "sec"},
        {"2B030000002231157", "INR値", "2B030000002231157", "02", "022", "", ""},
        {"1A990000000192051", "尿比重", "1A990000000192051", "01", "001", "", ""},
        {"1A990000000192052", "尿ｐＨ", "1A990000000192052", "01", "001", "", ""},
        {"1A990000000192053", "尿蛋白", "1A990000000192053", "01", "001", "", ""},
        {"1A990000000192054", "尿糖", "1A990000000192054", "01", "001", "", ""},
        {"1A990000000192055", "尿ウロビリノーゲン", "1A990000000192055", "01", "001", "", ""},
        {"1A990000000192056", "尿ウロビリン", "1A990000000192056", "01", "001", "", ""},
        {"1A990000000192057", "尿ビリルビン", "1A990000000192057", "01", "001", "", ""},
        {"1A990000000192058", "尿ケトン体", "1A990000000192058", "01", "001", "", ""},
        {"1A990000000192059", "尿潜血", "1A990000000192059", "01", "001", "", ""},
        {"1A990000000192060", "尿細菌（試験紙法）", "1A990000000192060", "01", "001", "", ""},
        {"1A990000000192062", "尿白血球数（試験紙法）", "1A990000000192062", "01", "001","", ""},
        {"1A990000000192063", "尿アルブミン", "1A990000000192063", "01", "001", "", ""},};


    static {
        groupMap = new HashMap<String, String>();
        for (String[] strs : groupArray) {
            groupMap.put(strs[0], strs[1]);
        }
        specimenMap = new HashMap<String, String>();
        for (String[] strs : specimenArray) {
            specimenMap.put(strs[0], strs[1]);
        }
     }
    
    public static List<InFacilityLaboItem> createLaboItemList() {
        
        List<InFacilityLaboItem> list = new ArrayList<InFacilityLaboItem>();
        
        for (String[] strs : laboArray) {
            InFacilityLaboItem item = new InFacilityLaboItem(
                    strs[0], strs[1], strs[2], 
                    strs[3], groupMap.get(strs[3]), 
                    strs[4], specimenMap.get(strs[4]), 
                    strs[5], strs[6]);
            list.add(item);
        }
        return list;
    }
    

}
